// Code generated by ent, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// EdgeCalls holds the string denoting the calls edge name in mutations.
	EdgeCalls = "calls"
	// Table holds the table name of the user in the database.
	Table = "users"
	// CallsTable is the table that holds the calls relation/edge.
	CallsTable = "calls"
	// CallsInverseTable is the table name for the Call entity.
	// It exists in this package in order to avoid circular dependency with the "call" package.
	CallsInverseTable = "calls"
	// CallsColumn is the table column denoting the calls relation/edge.
	CallsColumn = "user_calls"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldUsername,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	UsernameValidator func(string) error
)
